// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: event_command.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PackagedData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Records       []*EncodedRecord       `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	AgentId       string                 `protobuf:"bytes,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	IntranetIpv4  []string               `protobuf:"bytes,3,rep,name=intranet_ipv4,json=intranetIpv4,proto3" json:"intranet_ipv4,omitempty"`
	ExtranetIpv4  []string               `protobuf:"bytes,4,rep,name=extranet_ipv4,json=extranetIpv4,proto3" json:"extranet_ipv4,omitempty"`
	IntranetIpv6  []string               `protobuf:"bytes,5,rep,name=intranet_ipv6,json=intranetIpv6,proto3" json:"intranet_ipv6,omitempty"`
	ExtranetIpv6  []string               `protobuf:"bytes,6,rep,name=extranet_ipv6,json=extranetIpv6,proto3" json:"extranet_ipv6,omitempty"`
	Hostname      string                 `protobuf:"bytes,7,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Version       string                 `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty"`
	Product       string                 `protobuf:"bytes,9,opt,name=product,proto3" json:"product,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PackagedData) Reset() {
	*x = PackagedData{}
	mi := &file_event_command_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackagedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackagedData) ProtoMessage() {}

func (x *PackagedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_command_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackagedData.ProtoReflect.Descriptor instead.
func (*PackagedData) Descriptor() ([]byte, []int) {
	return file_event_command_proto_rawDescGZIP(), []int{0}
}

func (x *PackagedData) GetRecords() []*EncodedRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *PackagedData) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *PackagedData) GetIntranetIpv4() []string {
	if x != nil {
		return x.IntranetIpv4
	}
	return nil
}

func (x *PackagedData) GetExtranetIpv4() []string {
	if x != nil {
		return x.ExtranetIpv4
	}
	return nil
}

func (x *PackagedData) GetIntranetIpv6() []string {
	if x != nil {
		return x.IntranetIpv6
	}
	return nil
}

func (x *PackagedData) GetExtranetIpv6() []string {
	if x != nil {
		return x.ExtranetIpv6
	}
	return nil
}

func (x *PackagedData) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *PackagedData) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PackagedData) GetProduct() string {
	if x != nil {
		return x.Product
	}
	return ""
}

type EncodedRecord struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataType      int32                  `protobuf:"varint,1,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Data          []byte                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncodedRecord) Reset() {
	*x = EncodedRecord{}
	mi := &file_event_command_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncodedRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncodedRecord) ProtoMessage() {}

func (x *EncodedRecord) ProtoReflect() protoreflect.Message {
	mi := &file_event_command_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncodedRecord.ProtoReflect.Descriptor instead.
func (*EncodedRecord) Descriptor() ([]byte, []int) {
	return file_event_command_proto_rawDescGZIP(), []int{1}
}

func (x *EncodedRecord) GetDataType() int32 {
	if x != nil {
		return x.DataType
	}
	return 0
}

func (x *EncodedRecord) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *EncodedRecord) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Record struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataType      int32                  `protobuf:"varint,1,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Data          *Payload               `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Record) Reset() {
	*x = Record{}
	mi := &file_event_command_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_event_command_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Record.ProtoReflect.Descriptor instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_event_command_proto_rawDescGZIP(), []int{2}
}

func (x *Record) GetDataType() int32 {
	if x != nil {
		return x.DataType
	}
	return 0
}

func (x *Record) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Record) GetData() *Payload {
	if x != nil {
		return x.Data
	}
	return nil
}

type Payload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fields        map[string]string      `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Payload) Reset() {
	*x = Payload{}
	mi := &file_event_command_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload) ProtoMessage() {}

func (x *Payload) ProtoReflect() protoreflect.Message {
	mi := &file_event_command_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload.ProtoReflect.Descriptor instead.
func (*Payload) Descriptor() ([]byte, []int) {
	return file_event_command_proto_rawDescGZIP(), []int{3}
}

func (x *Payload) GetFields() map[string]string {
	if x != nil {
		return x.Fields
	}
	return nil
}

// server --> agent
type Command struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentCtrl     int32                  `protobuf:"varint,1,opt,name=AgentCtrl,proto3" json:"AgentCtrl,omitempty"` // Agent control command
	Task          *PluginTask            `protobuf:"bytes,2,opt,name=Task,proto3" json:"Task,omitempty"`            // Agent task
	Config        []*ConfigItem          `protobuf:"bytes,3,rep,name=Config,proto3" json:"Config,omitempty"`        // Plugin/Agent-host config
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command) Reset() {
	*x = Command{}
	mi := &file_event_command_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_event_command_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_event_command_proto_rawDescGZIP(), []int{4}
}

func (x *Command) GetAgentCtrl() int32 {
	if x != nil {
		return x.AgentCtrl
	}
	return 0
}

func (x *Command) GetTask() *PluginTask {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *Command) GetConfig() []*ConfigItem {
	if x != nil {
		return x.Config
	}
	return nil
}

type PluginTask struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// DataType which used to uniquely identify different  format of Data
	DataType int32 `protobuf:"varint,1,opt,name=DataType,proto3" json:"DataType,omitempty"`
	// Plugin name, which used to uniquely identify different plugins
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	// Data transparently transmitted to the plugin
	Data string `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	// The token is used for reconciliation
	Token         string `protobuf:"bytes,4,opt,name=Token,proto3" json:"Token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginTask) Reset() {
	*x = PluginTask{}
	mi := &file_event_command_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginTask) ProtoMessage() {}

func (x *PluginTask) ProtoReflect() protoreflect.Message {
	mi := &file_event_command_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginTask.ProtoReflect.Descriptor instead.
func (*PluginTask) Descriptor() ([]byte, []int) {
	return file_event_command_proto_rawDescGZIP(), []int{5}
}

func (x *PluginTask) GetDataType() int32 {
	if x != nil {
		return x.DataType
	}
	return 0
}

func (x *PluginTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PluginTask) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *PluginTask) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ConfigItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Version       string                 `protobuf:"bytes,3,opt,name=Version,proto3" json:"Version,omitempty"`
	SHA256        string                 `protobuf:"bytes,4,opt,name=SHA256,proto3" json:"SHA256,omitempty"`
	Signature     string                 `protobuf:"bytes,5,opt,name=Signature,proto3" json:"Signature,omitempty"`
	DownloadURL   []string               `protobuf:"bytes,6,rep,name=DownloadURL,proto3" json:"DownloadURL,omitempty"`
	Detail        string                 `protobuf:"bytes,7,opt,name=Detail,proto3" json:"Detail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigItem) Reset() {
	*x = ConfigItem{}
	mi := &file_event_command_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigItem) ProtoMessage() {}

func (x *ConfigItem) ProtoReflect() protoreflect.Message {
	mi := &file_event_command_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigItem.ProtoReflect.Descriptor instead.
func (*ConfigItem) Descriptor() ([]byte, []int) {
	return file_event_command_proto_rawDescGZIP(), []int{6}
}

func (x *ConfigItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigItem) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ConfigItem) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ConfigItem) GetSHA256() string {
	if x != nil {
		return x.SHA256
	}
	return ""
}

func (x *ConfigItem) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *ConfigItem) GetDownloadURL() []string {
	if x != nil {
		return x.DownloadURL
	}
	return nil
}

func (x *ConfigItem) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

var File_event_command_proto protoreflect.FileDescriptor

const file_event_command_proto_rawDesc = "" +
	"\n" +
	"\x13event_command.proto\x12\x05event\"\xbd\x02\n" +
	"\fPackagedData\x12.\n" +
	"\arecords\x18\x01 \x03(\v2\x14.event.EncodedRecordR\arecords\x12\x19\n" +
	"\bagent_id\x18\x02 \x01(\tR\aagentId\x12#\n" +
	"\rintranet_ipv4\x18\x03 \x03(\tR\fintranetIpv4\x12#\n" +
	"\rextranet_ipv4\x18\x04 \x03(\tR\fextranetIpv4\x12#\n" +
	"\rintranet_ipv6\x18\x05 \x03(\tR\fintranetIpv6\x12#\n" +
	"\rextranet_ipv6\x18\x06 \x03(\tR\fextranetIpv6\x12\x1a\n" +
	"\bhostname\x18\a \x01(\tR\bhostname\x12\x18\n" +
	"\aversion\x18\b \x01(\tR\aversion\x12\x18\n" +
	"\aproduct\x18\t \x01(\tR\aproduct\"^\n" +
	"\rEncodedRecord\x12\x1b\n" +
	"\tdata_type\x18\x01 \x01(\x05R\bdataType\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\"g\n" +
	"\x06Record\x12\x1b\n" +
	"\tdata_type\x18\x01 \x01(\x05R\bdataType\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x12\"\n" +
	"\x04data\x18\x03 \x01(\v2\x0e.event.PayloadR\x04data\"x\n" +
	"\aPayload\x122\n" +
	"\x06fields\x18\x01 \x03(\v2\x1a.event.Payload.FieldsEntryR\x06fields\x1a9\n" +
	"\vFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"y\n" +
	"\aCommand\x12\x1c\n" +
	"\tAgentCtrl\x18\x01 \x01(\x05R\tAgentCtrl\x12%\n" +
	"\x04Task\x18\x02 \x01(\v2\x11.event.PluginTaskR\x04Task\x12)\n" +
	"\x06Config\x18\x03 \x03(\v2\x11.event.ConfigItemR\x06Config\"f\n" +
	"\n" +
	"PluginTask\x12\x1a\n" +
	"\bDataType\x18\x01 \x01(\x05R\bDataType\x12\x12\n" +
	"\x04Name\x18\x02 \x01(\tR\x04Name\x12\x12\n" +
	"\x04Data\x18\x03 \x01(\tR\x04Data\x12\x14\n" +
	"\x05Token\x18\x04 \x01(\tR\x05Token\"\xbe\x01\n" +
	"\n" +
	"ConfigItem\x12\x12\n" +
	"\x04Name\x18\x01 \x01(\tR\x04Name\x12\x12\n" +
	"\x04Type\x18\x02 \x01(\tR\x04Type\x12\x18\n" +
	"\aVersion\x18\x03 \x01(\tR\aVersion\x12\x16\n" +
	"\x06SHA256\x18\x04 \x01(\tR\x06SHA256\x12\x1c\n" +
	"\tSignature\x18\x05 \x01(\tR\tSignature\x12 \n" +
	"\vDownloadURL\x18\x06 \x03(\tR\vDownloadURL\x12\x16\n" +
	"\x06Detail\x18\a \x01(\tR\x06Detail2>\n" +
	"\aService\x123\n" +
	"\bTransfer\x12\x13.event.PackagedData\x1a\x0e.event.Command(\x010\x01B\x1eZ\x1cgithub.com/lzkking/edr/protob\x06proto3"

var (
	file_event_command_proto_rawDescOnce sync.Once
	file_event_command_proto_rawDescData []byte
)

func file_event_command_proto_rawDescGZIP() []byte {
	file_event_command_proto_rawDescOnce.Do(func() {
		file_event_command_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_event_command_proto_rawDesc), len(file_event_command_proto_rawDesc)))
	})
	return file_event_command_proto_rawDescData
}

var file_event_command_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_event_command_proto_goTypes = []any{
	(*PackagedData)(nil),  // 0: event.PackagedData
	(*EncodedRecord)(nil), // 1: event.EncodedRecord
	(*Record)(nil),        // 2: event.Record
	(*Payload)(nil),       // 3: event.Payload
	(*Command)(nil),       // 4: event.Command
	(*PluginTask)(nil),    // 5: event.PluginTask
	(*ConfigItem)(nil),    // 6: event.ConfigItem
	nil,                   // 7: event.Payload.FieldsEntry
}
var file_event_command_proto_depIdxs = []int32{
	1, // 0: event.PackagedData.records:type_name -> event.EncodedRecord
	3, // 1: event.Record.data:type_name -> event.Payload
	7, // 2: event.Payload.fields:type_name -> event.Payload.FieldsEntry
	5, // 3: event.Command.Task:type_name -> event.PluginTask
	6, // 4: event.Command.Config:type_name -> event.ConfigItem
	0, // 5: event.Service.Transfer:input_type -> event.PackagedData
	4, // 6: event.Service.Transfer:output_type -> event.Command
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_event_command_proto_init() }
func file_event_command_proto_init() {
	if File_event_command_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_event_command_proto_rawDesc), len(file_event_command_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_event_command_proto_goTypes,
		DependencyIndexes: file_event_command_proto_depIdxs,
		MessageInfos:      file_event_command_proto_msgTypes,
	}.Build()
	File_event_command_proto = out.File
	file_event_command_proto_goTypes = nil
	file_event_command_proto_depIdxs = nil
}
